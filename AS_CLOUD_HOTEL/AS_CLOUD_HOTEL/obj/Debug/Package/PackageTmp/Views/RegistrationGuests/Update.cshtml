@using System.Data
@using System.Data.SqlClient
@using AS_CLOUD_HOTEL.Models
@model AS_CLOUD_HOTEL.Models.HML.HML_GUESTS

@{
    ViewBag.Title = "Update";

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }

    CLoudHotelDbContext db = new CLoudHotelDbContext();
    Int64 compid = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedCompID"]);
    Int64 loggedUserID = Convert.ToInt64(HttpContext.Current.Session["loggedUserID"].ToString());


    List<SelectListItem> listofGender = new List<SelectListItem>();
    listofGender.Add(new SelectListItem { Text = "MALE", Value = "MALE" });
    listofGender.Add(new SelectListItem { Text = "FEMALE", Value = "FEMALE" });


    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);


}
<link href="~/Content/bootstrap_datepicker_css/datepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap_datepicker_css/datepicker3.css" rel="stylesheet" />

<script src="~/Scripts/bootstrap-datepicker.js"></script>

<link href="~/Content/bootstrap_clock_picker/src/clockpicker.css" rel="stylesheet" />
<script src="~/Content/bootstrap_clock_picker/src/clockpicker.js"></script>
<link href="~/Content/bootstrap_clock_picker/src/standalone.css" rel="stylesheet" />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.COMPID, new { @Value = compid, id = "txtcompid" })
    @Html.HiddenFor(model => model.UPDUSERID, new { @Value = loggedUserID })
    @Html.HiddenFor(model => model.ID, new { id = "txthidden_ID" })

    <div id="contentHeaderBox" style="height:auto">
        @if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A")
        {

            var createStatus = "";
            var updateStatus = "";
            var deleteStatus = "";
            var status = "";

            var checkPermisiion = (from m in db.AslRoleDbSet
                                   where m.COMPID == compid && m.USERID == loggedUserID && m.CONTROLLERNAME == "Registration"
                                   select m).ToList();


            foreach (var x in checkPermisiion)
            {
                status = x.STATUS.ToString();
                createStatus = x.INSERTR.ToString();
                updateStatus = x.UPDATER.ToString();
                deleteStatus = x.DELETER.ToString();
            }


            if (updateStatus == "I")
            {
                Response.Redirect("~/GraphView/Index");
            }

            if (updateStatus == 'A'.ToString())
            {
                <ul class="nav nav-tabs" role="tablist">
                    <li>@Html.ActionLink("REGISTRATION", "Create", "Registration", "", new { style = "color: black;" })</li>
                    <li>@Html.ActionLink("PAYMENT", "Create", "RegistrationPayment", "", new { style = "color: black" })</li>
                    <li class="active">@Html.ActionLink("GUEST", "Create", "RegistrationGuests", "", htmlAttributes: new { style = "color: white;background-color: #286090;" })</li>
                    <li>@Html.ActionLink("COMPLEMENTARY ITEM", "Index", "RegistrationComplementaryItem", "", new { style = "color: black" })</li>
                </ul>
            }

            <div class="btn-group pull-right" id="editOption">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                    <i class="fa fa-cog"></i>
                </button>
                <ul class="dropdown-menu pull-right" style="" role="menu">
                    @if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "RegistrationGuests")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Update", "RegistrationGuests")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "RegistrationGuests")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Update", "RegistrationGuests")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "RegistrationGuests")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "RegistrationGuests")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Update", "RegistrationGuests")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "RegistrationGuests")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "RegistrationGuests")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "RegistrationGuests")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Update", "RegistrationGuests")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Delete", "RegistrationGuests")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                </ul>
            </div>

        }

    </div>
    <br />

    <div class="col-md-12">
        <div class="panel panel-success">
            @if (TempData["GuestsUpdateMessage"] != null)
            {
                <div class="panel-heading" style=" text-align center; background-image linear-gradient(to bottom, #286090 0%, #286090 100%); background-repeat repeat-x; color white; background-color #286090; border-color #286090;">GUESTS (UPDATE)- @TempData["GuestsUpdateMessage"]</div>
            }
            else
            {
                <div class="panel-heading" style=" text-align center; background-image linear-gradient(to bottom, #286090 0%, #286090 100%); background-repeat repeat-x; color white; background-color #286090; border-color #286090;">GUESTS (UPDATE)</div>
            }
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Registration Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    <input type="text" class="form-control" id="txt_REGNDT" />
                </div>

                <div class="col-md-2" style="text-align: right">
                    @Html.Label("name", "Registration-ID", htmlAttributes: new { @class = "control-label " })
                </div>
                <div class="col-md-2">
                    @Html.DropDownListFor(model => model.REGNID, new SelectList(string.Empty, "Value", "Text"), "- Select -", htmlAttributes: new { id = "txt_REGNID", @class = "form-control" })
                </div>
                <div class="col-md-2">
                    @Html.Label("name", "Room No", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    <input type="text" class="form-control input-sm" id="txt_ROOMNO" readonly="readonly" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Guest-ID", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.DropDownListFor(model => model.GUESTID, new SelectList(string.Empty, "Value", "Text"), "- Select -", htmlAttributes: new { id = "txt_GUESTID", @class = "form-control" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Guest Name", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.GUESTNM, htmlAttributes: new { id = "txt_GUESTNM", @class = "form-control input-sm", @maxlength = "100" })
                    @Html.ValidationMessageFor(model => model.GUESTNM, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Date of Birth", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.DOB, htmlAttributes: new { id = "txt_DOB", @class = "form-control input-sm" })
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "Gender", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.GENDER, listofGender, htmlAttributes: new { id = "txt_GENDER", @class = "form-control input-sm", })
                    @Html.ValidationMessageFor(model => model.GENDER, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Address", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.ADDRESS, htmlAttributes: new { id = "txt_ADDRESS", @class = "form-control input-sm", @maxlength = "90" })
                    @Html.ValidationMessageFor(model => model.ADDRESS, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "City", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.CITY, htmlAttributes: new { id = "txt_CITY", @class = "form-control input-sm", @maxlength = "45" })
                    @Html.ValidationMessageFor(model => model.CITY, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "ZipCode", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.ZIPCODE, htmlAttributes: new { id = "txt_ZIPCODE", @class = "form-control input-sm", @maxlength = "8", @type = "number" })
                    @Html.ValidationMessageFor(model => model.ZIPCODE, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Country", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.COUNTRY, htmlAttributes: new { id = "txt_COUNTRY", @class = "form-control input-sm", @maxlength = "55" })
                    @Html.ValidationMessageFor(model => model.COUNTRY, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "Nationality", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.NATIONALITY, htmlAttributes: new { id = "txt_NATIONALITY", @class = "form-control input-sm", @maxlength = "55", @Value = "Bangladeshi" })
                    @Html.ValidationMessageFor(model => model.NATIONALITY, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Email ID", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.EMAILID, htmlAttributes: new { id = "txt_EMAILID", @class = "form-control input-sm", @maxlength = "95", })
                    @Html.ValidationMessageFor(model => model.EMAILID, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "Telephone No", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.TELNO, htmlAttributes: new { id = "txt_TELNO", @class = "form-control input-sm", @maxlength = "30", })
                    @Html.ValidationMessageFor(model => model.TELNO, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "MobileNo", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.MOBNO, htmlAttributes: new { id = "txt_MOBNO", @class = "form-control input-sm", @maxlength = "30" })
                    @Html.ValidationMessageFor(model => model.MOBNO, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "National ID", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.NIDNO, htmlAttributes: new { id = "txt_NIDNO", @class = "form-control input-sm", @maxlength = "20", })
                    @Html.ValidationMessageFor(model => model.NIDNO, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Driving license No", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.DRLICNO, htmlAttributes: new { id = "txt_DRLICNO", @class = "form-control input-sm", @maxlength = "20" })
                    @Html.ValidationMessageFor(model => model.DRLICNO, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "Visa No", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.VISANO, htmlAttributes: new { id = "txt_VISANO", @class = "form-control input-sm", @maxlength = "20" })
                    @Html.ValidationMessageFor(model => model.VISANO, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Visa Issue Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.VISAIDT, htmlAttributes: new { id = "txt_VISAIDT", @class = "form-control input-sm", })
                    @Html.ValidationMessageFor(model => model.VISAIDT, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "Visa Expire Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.VISAEDT, htmlAttributes: new { id = "txt_VISAEDT", @class = "form-control input-sm", })
                    @Html.ValidationMessageFor(model => model.VISAEDT, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Passport No", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.PPNO, htmlAttributes: new { id = "txt_PPNO", @class = "form-control input-sm", @maxlength = "20" })
                    @Html.ValidationMessageFor(model => model.PPNO, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "Passport Issue Place", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.PPIPLACE, htmlAttributes: new { id = "txt_PPIPLACE", @class = "form-control input-sm", @maxlength = "50" })
                    @Html.ValidationMessageFor(model => model.PPIPLACE, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Passport Issue Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.PPIDT, htmlAttributes: new { id = "txt_PPIDT", @class = "form-control input-sm", })
                    @Html.ValidationMessageFor(model => model.PPIDT, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "Passport Expire Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.PPEDT, htmlAttributes: new { id = "txt_PPEDT", @class = "form-control input-sm", })
                    @Html.ValidationMessageFor(model => model.PPEDT, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Remarks", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.REMARKS, htmlAttributes: new { id = "txt_REMARKS", @class = "form-control input-sm", @maxlength = "100" })
                    @Html.ValidationMessageFor(model => model.REMARKS, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model.INSTIME, new { id = "HiddentxtInstime" })
            @Html.HiddenFor(model => model.INSIPNO, new { id = "HiddentxtInsipno" })
            @Html.HiddenFor(model => model.INSLTUDE, new { id = "HiddentxtInsltude" })
            @Html.HiddenFor(model => model.INSUSERID, new { id = "HiddentxtInsuserId" })

            @Html.TextBoxFor(model => model.UPDLTUDE, new { id = "latlon", style = "display: none;" })
            <input id="lat" type="hidden" />
            <input id="lon" type="hidden" />

            <br />
            <div class="row">
                <div class="col-md-4"></div>
                <div class="col-md-4">
                    <input type="submit" class="btn btn-primary btn-block" value="Update" name="command" />
                </div>
                <div class="col-md-4"></div>
            </div>
        </div>
    </div>


    <script src="http://maps.google.com/maps/api/js?sensor=false"></script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlon").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }

            //function positionError(position) {
            //    alert("!!! Error: "+position.code);
            //}
        });
    </script>


    //datatime picker script
    <script type="text/javascript">
        $('.clockpicker').clockpicker();
    </script>


    <script type="text/javascript">
        $(document).ready(function() {

            $('#txt_DOB').datepicker({
                format: "dd-M-yyyy",
                autoclose: true,
                todayHighlight: true,
                showOnFocus: true,
            }).on('show', function(e) {
                if (e.date) {
                    $(this).data('stickyDate', e.date);
                } else {
                    $(this).data('stickyDate', null);
                }
            }).on('hide', function(e) {
                var stickyDate = $(this).data('stickyDate');

                if (!e.date && stickyDate) {
                    $(this).datepicker('setDate', stickyDate);
                    $(this).data('stickyDate', null);
                }
                document.getElementById("txt_GENDER").focus();
            });

            $('#txt_VISAIDT').datepicker({
                format: "dd-M-yyyy",
                autoclose: true,
                todayHighlight: true,
                showOnFocus: true,
            }).on('show', function(e) {
                if (e.date) {
                    $(this).data('stickyDate', e.date);
                } else {
                    $(this).data('stickyDate', null);
                }
            }).on('hide', function(e) {
                var stickyDate = $(this).data('stickyDate');

                if (!e.date && stickyDate) {
                    $(this).datepicker('setDate', stickyDate);
                    $(this).data('stickyDate', null);
                }
                document.getElementById("txt_VISAEDT").focus();
            });

            $('#txt_VISAEDT').datepicker({
                format: "dd-M-yyyy",
                autoclose: true,
                todayHighlight: true,
                showOnFocus: true,
            }).on('show', function(e) {
                if (e.date) {
                    $(this).data('stickyDate', e.date);
                } else {
                    $(this).data('stickyDate', null);
                }
            }).on('hide', function(e) {
                var stickyDate = $(this).data('stickyDate');

                if (!e.date && stickyDate) {
                    $(this).datepicker('setDate', stickyDate);
                    $(this).data('stickyDate', null);
                }
                document.getElementById("txt_PPNO").focus();
            });

            $('#txt_PPIDT').datepicker({
                format: "dd-M-yyyy",
                autoclose: true,
                todayHighlight: true,
                showOnFocus: true,
            }).on('show', function(e) {
                if (e.date) {
                    $(this).data('stickyDate', e.date);
                } else {
                    $(this).data('stickyDate', null);
                }
            }).on('hide', function(e) {
                var stickyDate = $(this).data('stickyDate');

                if (!e.date && stickyDate) {
                    $(this).datepicker('setDate', stickyDate);
                    $(this).data('stickyDate', null);
                }
                document.getElementById("txt_PPEDT").focus();
            });

            $('#txt_PPEDT').datepicker({
                format: "dd-M-yyyy",
                autoclose: true,
                todayHighlight: true,
                showOnFocus: true,
            }).on('show', function(e) {
                if (e.date) {
                    $(this).data('stickyDate', e.date);
                } else {
                    $(this).data('stickyDate', null);
                }
            }).on('hide', function(e) {
                var stickyDate = $(this).data('stickyDate');

                if (!e.date && stickyDate) {
                    $(this).datepicker('setDate', stickyDate);
                    $(this).data('stickyDate', null);
                }
                document.getElementById("txt_REMARKS").focus();
            });


            $('#txt_REGNDT').datepicker({
                format: "dd-M-yyyy",
                autoclose: true,
                todayHighlight: true,
                showOnFocus: true,
            }).on('show', function(e) {
                if (e.date) {
                    $(this).data('stickyDate', e.date);
                } else {
                    $(this).data('stickyDate', null);
                }
            }).on('hide', function(e) {
                var stickyDate = $(this).data('stickyDate');

                if (!e.date && stickyDate) {
                    $(this).datepicker('setDate', stickyDate);
                    $(this).data('stickyDate', null);
                }
                document.getElementById("txt_REGNID").focus();
            });


            $('#txt_REGNDT').change(function() {
                var datetxt = $('#txt_REGNDT').val();
                var companyid = $('#txtcompid').val();
                $("#txt_REGNID").val("");
                $("#txt_GUESTID").val("");
                $.ajax
                ({
                    url: '@Url.Action("RegistrationIDload", "Registration")',
                    type: 'post',
                    dataType: "json",
                    data: { theDate: datetxt, compid: companyid },
                    success: function(data) {
                        $("#txt_REGNID").empty();
                        $("#txt_REGNID").append('<option value="'
                            + "select" + '">'
                            + "select" + '</option>');


                        $.each(data, function(i, memo) {

                            $("#txt_REGNID").append('<option value="'
                                + memo.Value + '">'
                                + memo.Text + '</option>');

                        });
                    }
                });
            });


            $('#txt_REGNID').change(function() {
                var changedText = $("#txt_REGNID").val();
                var registrationDate = $("#txt_REGNDT").val();
                var compid = $('#txtcompid').val();

                var txt_ROOMNO = document.getElementById('txt_ROOMNO');
                $.getJSON(
                    '/RegistrationPayment/keyword_registrationID', { "ChangedText": changedText, "Compid": compid, "RegistrationDate": registrationDate },
                    function(result) {
                        txt_ROOMNO.value = result.ROOMNO;
                    });

                var registrationID = $("#txt_REGNID").val();
                $("#txt_GUESTID").val("");
                $.ajax
                ({
                    url: '@Url.Action("GuestIDLoad", "RegistrationGuests")',
                    type: 'post',
                    dataType: "json",
                    data: { companyid: compid, regid: registrationID },
                    success: function(data) {
                        $("#txt_GUESTID").empty();
                        $("#txt_GUESTID").append('<option value="'
                            + "select" + '">'
                            + "select" + '</option>');


                        $.each(data, function(i, memo) {

                            $("#txt_GUESTID").append('<option value="'
                                + memo.Value + '">'
                                + memo.Text + '</option>');

                        });
                    }
                });


                $('#txt_ROOMNO').val("");
            });


            $('#txt_GUESTID').change(function() {
                var changedText = $("#txt_GUESTID").val();
                var companyID = $('#txtcompid').val();
                var registrationID = $("#txt_REGNID").val();

                var txt_ID = document.getElementById('txthidden_ID');
                var txt_GUESTNM = document.getElementById('txt_GUESTNM');
                var txt_DOB = document.getElementById('txt_DOB');
                var txt_GENDER = document.getElementById('txt_GENDER');
                var txt_ADDRESS = document.getElementById('txt_ADDRESS');
                var txt_CITY = document.getElementById('txt_CITY');
                var txt_ZIPCODE = document.getElementById('txt_ZIPCODE');
                var txt_COUNTRY = document.getElementById('txt_COUNTRY');
                var txt_NATIONALITY = document.getElementById('txt_NATIONALITY');
                var txt_EMAILID = document.getElementById('txt_EMAILID');
                var txt_TELNO = document.getElementById('txt_TELNO');
                var txt_MOBNO = document.getElementById('txt_MOBNO');
                var txt_NIDNO = document.getElementById('txt_NIDNO');
                var txt_DRLICNO = document.getElementById('txt_DRLICNO');
                var txt_VISANO = document.getElementById('txt_VISANO');
                var txt_VISAIDT = document.getElementById('txt_VISAIDT');
                var txt_VISAEDT = document.getElementById('txt_VISAEDT');
                var txt_PPNO = document.getElementById('txt_PPNO');
                var txt_PPIPLACE = document.getElementById('txt_PPIPLACE');
                var txt_PPIDT = document.getElementById('txt_PPIDT');
                var txt_PPEDT = document.getElementById('txt_PPEDT');
                var txt_REMARKS = document.getElementById('txt_REMARKS');

                var txtInseruserId = document.getElementById('HiddentxtInsuserId');
                var txtInsertime = document.getElementById('HiddentxtInstime');
                var txtinslutude = document.getElementById('HiddentxtInsltude');
                var txtinseripno = document.getElementById('HiddentxtInsipno');
                $.getJSON(
                    '/RegistrationGuests/GetData', { "ChangedText": changedText, "CompanyID": companyID, "RegistrationID": registrationID },
                    function(result) {
                        txt_ID.value = result.ID;
                        txt_GUESTNM.value = result.GUESTNM;
                        txt_DOB.value = result.DOB;
                        txt_GENDER.value = result.GENDER;
                        txt_ADDRESS.value = result.ADDRESS;
                        txt_CITY.value = result.CITY;
                        txt_ZIPCODE.value = result.ZIPCODE;
                        txt_COUNTRY.value = result.COUNTRY;
                        txt_NATIONALITY.value = result.NATIONALITY;
                        txt_EMAILID.value = result.EMAILID;
                        txt_TELNO.value = result.TELNO;
                        txt_MOBNO.value = result.MOBNO;
                        txt_NIDNO.value = result.NIDNO;
                        txt_DRLICNO.value = result.DRLICNO;
                        txt_VISANO.value = result.VISANO;
                        txt_VISAIDT.value = result.VISAIDT;
                        txt_VISAEDT.value = result.VISAEDT;
                        txt_PPNO.value = result.PPNO;
                        txt_PPIPLACE.value = result.PPIPLACE;
                        txt_PPIDT.value = result.PPIDT;
                        txt_PPEDT.value = result.PPEDT;
                        txt_REMARKS.value = result.REMARKS;

                        txtInseruserId.value = result.INSUSERID;
                        txtInsertime.value = result.INSTIME;
                        txtinslutude.value = result.INSLTUDE;
                        txtinseripno.value = result.INSIPNO;

                    });

                $("#txthidden_ID").val("");
                $("#txt_GUESTNM").val("");
                $("#txt_DOB").val("");
                $("#txt_GENDER").val("");
                $("#txt_ADDRESS").val("");
                $("#txt_CITY").val("");
                $("#txt_ZIPCODE").val("");
                $("#txt_COUNTRY").val("");
                $("#txt_NATIONALITY").val("");
                $("#txt_EMAILID").val("");
                $("#txt_TELNO").val("");
                $("#txt_MOBNO").val("");
                $("#txt_NIDNO").val("");
                $("#txt_DRLICNO").val("");
                $("#txt_VISANO").val("");
                $("#txt_VISAIDT").val("");
                $("#txt_VISAEDT").val("");
                $("#txt_PPNO").val("");
                $("#txt_PPIPLACE").val("");
                $("#txt_PPIDT").val("");
                $("#txt_PPEDT").val("");
                $("#txt_REMARKS").val("");
            });


            $('#txt_CITY').autocomplete(
            {
                source: function(request, response) {
                    var cpid = $('#txtcompid').val();
                    $.ajax({
                        url: '/RegistrationGuests/CitySearch',
                        type: 'GET',
                        cache: false,
                        data: { character: request.term, compid: cpid },
                        dataType: 'json',
                        success: function(data) {
                            response($.map(data, function(item) {
                                return {
                                    label: item,
                                    value: item,
                                };
                            }));
                        }
                    });
                },
            });


            $('#txt_NATIONALITY').autocomplete(
            {
                source: function(request, response) {
                    var cpid = $('#txtcompid').val();
                    $.ajax({
                        url: '/RegistrationGuests/NationalitySearch',
                        type: 'GET',
                        cache: false,
                        data: { character: request.term, compid: cpid },
                        dataType: 'json',
                        success: function(data) {
                            response($.map(data, function(item) {
                                return {
                                    label: item,
                                    value: item,
                                };
                            }));
                        }
                    });
                },
            });

        });
    </script>

    <style type="text/css">
        .ui-autocomplete {
            position: absolute;
            cursor: default;
            background: #f0ffff;
            max-height: 200px;
            overflow-y: auto;
            /* prevent horizontal scrollbar */
            overflow-x: hidden;
            /* add padding to account for vertical scrollbar */
            padding-right: 20px;
        }
    </style>

}

@*<script src="~/Scripts/jquery-1.9.1.min.js"></script>*@

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@


@*<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-1.9.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>
    <script src="~/Scripts/Underscore.js"></script>*@
@*<script src="~/Scripts/jquery.js"></script>*@

<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.9.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>

<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>


