@using System.Data
@using System.Data.SqlClient
@using AS_CLOUD_HOTEL.Models
@model AS_CLOUD_HOTEL.Models.HML.HML_REGN

@{
    ViewBag.Title = "Delete";

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }

    CLoudHotelDbContext db = new CLoudHotelDbContext();
    Int64 compid = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedCompID"]);
    Int64 loggedUserID = Convert.ToInt64(HttpContext.Current.Session["loggedUserID"].ToString());

    List<SelectListItem> listof_RESVYN = new List<SelectListItem>();
    listof_RESVYN.Add(new SelectListItem { Text = "YES", Value = "YES" });
    listof_RESVYN.Add(new SelectListItem { Text = "NO", Value = "NO" });
    
    List<SelectListItem> listof_VISITPRE = new List<SelectListItem>();
    listof_VISITPRE.Add(new SelectListItem { Text = "YES", Value = "YES" });
    listof_VISITPRE.Add(new SelectListItem { Text = "NO", Value = "NO" });
    
    List<SelectListItem> listof_GRFID = new List<SelectListItem>();
    var find_RF_GUEST = (from n in db.HmlGuestrfDbSet where n.COMPID == compid select n).ToList();
    foreach (var item in find_RF_GUEST)
    {
        listof_GRFID.Add(new SelectListItem { Text = item.REFERNM, Value = Convert.ToString(item.GRFID) });
    }


    List<SelectListItem> listofRoomtype = new List<SelectListItem>();
    var find_RoomType = (from n in db.HmlRoomTpDbSet where n.COMPID == compid select n).ToList();
    foreach (var item in find_RoomType)
    {
        listofRoomtype.Add(new SelectListItem { Text = item.RTPNM, Value = Convert.ToString(item.RTPID) });
    }

    List<SelectListItem> listofGuestCompany = new List<SelectListItem>();
    var findGuestCompany = (from n in db.HmlGuestcoDbSet where n.COMPID == compid select n).ToList();
    foreach (var item in findGuestCompany)
    {
        listofGuestCompany.Add(new SelectListItem { Text = item.GCONM, Value = Convert.ToString(item.GCOID) });
    }

    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);


}
<link href="~/Content/bootstrap_datepicker_css/datepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap_datepicker_css/datepicker3.css" rel="stylesheet" />

<script src="~/Scripts/bootstrap-datepicker.js"></script>

<link href="~/Content/bootstrap_clock_picker/src/clockpicker.css" rel="stylesheet" />
<script src="~/Content/bootstrap_clock_picker/src/clockpicker.js"></script>
<link href="~/Content/bootstrap_clock_picker/src/standalone.css" rel="stylesheet" />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.COMPID, new { id = "hiddentxtCompanid", @Value = compid })
    @Html.HiddenFor(model => model.UPDUSERID, new { @Value = loggedUserID })
    @Html.HiddenFor(model => model.ID, new { id = "Hiddentxt_ID" })
    @Html.HiddenFor(model => model.REGNYY, new { id = "Hiddentxt_REGNYY" })

    <div id="contentHeaderBox" style="height:auto">
        @if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A")
        {

            var createStatus = "";
            var updateStatus = "";
            var deleteStatus = "";
            var status = "";

            var checkPermisiion = (from m in db.AslRoleDbSet
                                   where m.COMPID == compid && m.USERID == loggedUserID && m.CONTROLLERNAME == "Registration"
                                   select m).ToList();


            foreach (var x in checkPermisiion)
            {
                status = x.STATUS.ToString();
                createStatus = x.INSERTR.ToString();
                updateStatus = x.UPDATER.ToString();
                deleteStatus = x.DELETER.ToString();
            }


            if (deleteStatus == "I")
            {
                Response.Redirect("~/GraphView/Index");
            }

            if (deleteStatus == 'A'.ToString())
            {
                <ul class="nav nav-tabs" role="tablist">
                    <li class="active">@Html.ActionLink("REGISTRATION", "Create", "Registration", "", new { style = "color: white;background-color: #286090;" })</li>
                    <li>@Html.ActionLink("PAYMENT", "Create", "RegistrationPayment", "", new { style = "color: black" })</li>
                    <li>@Html.ActionLink("GUEST", "Create", "RegistrationGuests", "", htmlAttributes: new { style = "color: black" })</li>
                    <li>@Html.ActionLink("COMPLEMENTARY ITEM", "Index", "RegistrationComplementaryItem", "", new { style = "color: black" })</li>
                </ul>
            }

            <div class="btn-group pull-right" id="editOption">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                    <i class="fa fa-cog"></i>
                </button>
                <ul class="dropdown-menu pull-right" style="" role="menu">
                    @if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "Registration")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Update", "Registration")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "Registration")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Update", "Registration")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "Registration")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "Registration")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Update", "Registration")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "Registration")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "Registration")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "Registration")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Update", "Registration")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Delete", "Registration")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                </ul>
            </div>

        }

    </div>
    <br />

    <div class="col-md-12">
        <div class="panel panel-success">
            @if (TempData["RegistrationDeleteMessage"] != null)
            {
                <div class="panel-heading" style=" text-align: center; background-image: linear-gradient(to bottom, #286090 0%, #286090 100%); background-repeat: repeat-x; color: white; background-color: #286090; border-color: #286090;">REGISTRATION-BASIC (DELETE)- @TempData["RegistrationDeleteMessage"]</div>
            }
            else
            {
                <div class="panel-heading" style=" text-align: center; background-image: linear-gradient(to bottom, #286090 0%, #286090 100%); background-repeat: repeat-x; color: white; background-color: #286090; border-color: #286090;">REGISTRATION-BASIC (DELETE)</div>
            }
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.REGNDT, htmlAttributes: new { id = "txt_REGNDT", @class = "form-control input-sm", })
                    @Html.ValidationMessageFor(model => model.REGNDT, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "ID", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.DropDownListFor(model => model.REGNID, new SelectList(string.Empty, "Value", "Text"), "- Select -", htmlAttributes: new { id = "txt_REGNID", @class = "form-control input-sm" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Check In", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.CHECKI, htmlAttributes: new { id = "txt_CHECKI", @class = "form-control input-sm", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.CHECKI, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "Check Out", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.GHECKO, htmlAttributes: new { id = "txt_GHECKO", @class = "form-control input-sm", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.GHECKO, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Reservation", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.RESVYN, htmlAttributes: new { id = "txt_RESVYN", @class = "form-control input-sm", @maxlength = "3", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.RESVYN, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Reservation Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    <input type="text" class="form-control  input-sm" id="txt_RESVDATE" readonly="readonly" />
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "Reservation ID		", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.RESVID, htmlAttributes: new { id = "txt_RESVID", @class = "form-control input-sm", @type = "number", @maxlength = "8", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.RESVID, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Contact Person", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    <input type="text" class="form-control input-sm" id="txt_CPNM" readonly="readonly" />
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Guest company", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.GCOID, listofGuestCompany,"-SELECT-",htmlAttributes: new { id = "txt_GCOID", @class = "form-control input-sm", @maxlength = "10", @type = "number", @Value = "0", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.GCOID, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "Currency Type", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.CCYTP, htmlAttributes: new { id = "txt_CCYTP", @class = "form-control input-sm", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.CCYTP, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Exchange Rate", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.CCYCRT, htmlAttributes: new { id = "txt_CCYCRT", @class = "form-control input-sm", @maxlength = "11", @type = "number", @Step = "any", @Value = "0", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.CCYCRT, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "Room Type", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.RTPID,listofRoomtype,"-SELECT-", htmlAttributes: new { id = "txt_RTPID", @class = "form-control input-sm", @maxlength = "5", @type = "number", @Value = "0", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.RTPID, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Room No", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.ROOMNO, htmlAttributes: new { id = "txt_ROOMNO", @class = "form-control input-sm", @maxlength = "3", @type = "number", @Value = "0", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.ROOMNO, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "Rate (Offer)", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.ROOMRTO, htmlAttributes: new { id = "txt_ROOMRTO", @class = "form-control input-sm", @maxlength = "12", @type = "number", @Step = "any", @Value = "0", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.ROOMRTO, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Discount Type", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.DISCTP, htmlAttributes: new { id = "txt_DISCTP", @class = "form-control input-sm", @readonly = "readonly"  })
                    @Html.ValidationMessageFor(model => model.DISCTP, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "Discount Amount", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.DISCRT, htmlAttributes: new { id = "txt_DISCRT", @class = "form-control input-sm", @maxlength = "10", @type = "number", @Step = "any", @Value = "0", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.DISCRT, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Rate (Negotiated)", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.ROOMRTS, htmlAttributes: new { id = "txt_ROOMRTS", @class = "form-control input-sm", @maxlength = "12", @type = "number", @Step = "any", @Value = "0", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.ROOMRTS, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Visit Purpose", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.VISITPP, htmlAttributes: new { id = "txt_VISITPP", @class = "form-control input-sm", @maxlength = "100", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.VISITPP, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "Previsiosly Visited", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.VISITPRE, listof_VISITPRE, htmlAttributes: new { id = "txt_VISITPRE", @class = "form-control input-sm", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.VISITPRE, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Coming From", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.DESTFR, "-Select-", htmlAttributes: new { id = "txt_DESTFR", @class = "form-control input-sm", @maxlength = "100", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.DESTFR, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "Next Destination", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.DESTTO, htmlAttributes: new { id = "txt_DESTTO", @class = "form-control input-sm", @maxlength = "100", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.DESTTO, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "RF (Guest)", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.GRFID, listof_GRFID, "-Select-", htmlAttributes: new { id = "txt_GRFID", @class = "form-control input-sm", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.GRFID, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "Room No (Link)", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.ROOMNOL, htmlAttributes: new { id = "txt_ROOMNOL", @class = "form-control input-sm", @maxlength = "3", @type = "number", @Value = "0", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.ROOMNOL, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Registration ID (Link)", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.REGNIDL, htmlAttributes: new { id = "txt_REGNIDL", @class = "form-control input-sm", @maxlength = "8", @type = "number", @Value = "0", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.REGNIDL, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4" style="text-align: right">
                    @Html.Label("name", "Remarks", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextAreaFor(model => model.REMARKS, htmlAttributes: new { id = "txt_REMARKS", @class = "form-control input-sm", @maxlength = "100", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.REMARKS, "", new { @class = "text-danger" })
                </div>
            </div>


            @Html.HiddenFor(model => model.INSTIME, new { id = "HiddentxtInstime" })
            @Html.HiddenFor(model => model.INSIPNO, new { id = "HiddentxtInsipno" })
            @Html.HiddenFor(model => model.INSLTUDE, new { id = "HiddentxtInsltude" })
            @Html.HiddenFor(model => model.INSUSERID, new { id = "HiddentxtInsuserId" })

            @Html.TextBoxFor(model => model.UPDLTUDE, new { id = "latlon", style = "display: none;" })
            <input id="lat" type="hidden" />
            <input id="lon" type="hidden" />

            <br />
            <div class="row">
                <div class="col-md-4"></div>
                <div class="col-md-4">
                    <input type="submit" class="btn btn-primary btn-block" value="Delete" name="command" />
                </div>
                <div class="col-md-4"></div>
            </div>
        </div>
    </div>


    <script src="http://maps.google.com/maps/api/js?sensor=false"></script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlon").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }

            //function positionError(position) {
            //    alert("!!! Error: "+position.code);
            //}
        });
    </script>


            //datatime picker script
            <script type="text/javascript">
                $('.clockpicker').clockpicker();
            </script>


            <script type="text/javascript">
                $(document).ready(function () {

                    $('#txt_REGNDT').datepicker({
                        format: "dd-M-yyyy",
                        autoclose: true,
                        todayHighlight: true,
                        showOnFocus: true,
                    }).on('show', function (e) {
                        if (e.date) {
                            $(this).data('stickyDate', e.date);
                        } else {
                            $(this).data('stickyDate', null);
                        }
                    }).on('hide', function (e) {
                        var stickyDate = $(this).data('stickyDate');

                        if (!e.date && stickyDate) {
                            $(this).datepicker('setDate', stickyDate);
                            $(this).data('stickyDate', null);
                        }
                        document.getElementById("txt_REGNID").focus();
                    });


                    $('#txt_REGNDT').change(function () {
                        var datetxt = $('#txt_REGNDT').val();
                        var companyid = $('#hiddentxtCompanid').val();
                        $("#txt_REGNID").val(" ");
                        $.ajax
                        ({
                            url: '@Url.Action("RegistrationIDload", "Registration")',
                            type: 'post',
                            dataType: "json",
                            data: { theDate: datetxt, compid: companyid },
                            success: function (data) {
                                $("#txt_REGNID").empty();
                                $("#txt_REGNID").append('<option value="'
                                    + "select" + '">'
                                    + "select" + '</option>');


                                $.each(data, function (i, memo) {

                                    $("#txt_REGNID").append('<option value="'
                                        + memo.Value + '">'
                                        + memo.Text + '</option>');

                                });
                            }
                        });
                    });

                 

                    

                    $('#txt_REGNID').change(function () {
                        var txt_REGNID = $('#txt_REGNID').val();
                        var datetxt = $('#txt_REGNDT').val();
                        var companyid = $('#hiddentxtCompanid').val();

                        var Hiddentxt_ID = document.getElementById('Hiddentxt_ID');
                        var Hiddentxt_REGNYY = document.getElementById('Hiddentxt_REGNYY');
                        var txt_CHECKI = document.getElementById('txt_CHECKI');
                        var txt_GHECKO = document.getElementById('txt_GHECKO');
                        var txt_RESVYN = document.getElementById('txt_RESVYN');
                        var txt_RESVDATE = document.getElementById('txt_RESVDATE');
                        var txt_RESVID = document.getElementById('txt_RESVID');
                        var txt_CPNM = document.getElementById('txt_CPNM');
                        var txt_GCOID = document.getElementById('txt_GCOID');
                        var txt_CCYTP = document.getElementById('txt_CCYTP');
                        var txt_CCYCRT = document.getElementById('txt_CCYCRT');
                        var txt_RTPID = document.getElementById('txt_RTPID');
                        var txt_ROOMNO = document.getElementById('txt_ROOMNO');
                        var txt_ROOMRTO = document.getElementById('txt_ROOMRTO');
                        var txt_DISCTP = document.getElementById('txt_DISCTP');
                        var txt_DISCRT = document.getElementById('txt_DISCRT');
                        var txt_ROOMRTS = document.getElementById('txt_ROOMRTS');
                        var txt_VISITPP = document.getElementById('txt_VISITPP');
                        var txt_VISITPRE = document.getElementById('txt_VISITPRE');
                        var txt_DESTFR = document.getElementById('txt_DESTFR');
                        var txt_DESTTO = document.getElementById('txt_DESTTO');
                        var txt_GRFID = document.getElementById('txt_GRFID');
                        var txt_ROOMNOL = document.getElementById('txt_ROOMNOL');
                        var txt_REGNIDL = document.getElementById('txt_REGNIDL');
                        var txt_REMARKS = document.getElementById('txt_REMARKS');

                        var txtInseruserId = document.getElementById('HiddentxtInsuserId');
                        var txtInsertime = document.getElementById('HiddentxtInstime');
                        var txtinslutude = document.getElementById('HiddentxtInsltude');
                        var txtinseripno = document.getElementById('HiddentxtInsipno');

                        $.getJSON('/Registration/GetRegistrationData', { "Companyid": companyid, "Datetxt": datetxt, "Txt_REGNID": txt_REGNID },
                           function (myData) {
                               Hiddentxt_ID.value = myData.ID;
                               Hiddentxt_REGNYY.value = myData.REGNYY;

                               txt_CHECKI.value = myData.CHECKI;
                               txt_GHECKO.value = myData.GHECKO;
                               txt_RESVYN.value = myData.RESVYN;
                               txt_RESVDATE.value = myData.RESVDATE;
                               txt_RESVID.value = myData.RESVID;
                               txt_CPNM.value = myData.CPNM;
                               txt_GCOID.value = myData.GCOID;
                               txt_CCYTP.value = myData.CCYTP;
                               txt_CCYCRT.value = myData.CCYCRT;
                               txt_RTPID.value = myData.RTPID;
                               txt_ROOMNO.value = myData.ROOMNO;
                               txt_ROOMRTO.value = myData.ROOMRTO;
                               txt_DISCTP.value = myData.DISCTP;
                               txt_DISCRT.value = myData.DISCRT;
                               txt_ROOMRTS.value = myData.ROOMRTS;
                               txt_VISITPP.value = myData.VISITPP;
                               txt_VISITPRE.value = myData.VISITPRE;
                               txt_DESTFR.value = myData.DESTFR;
                               txt_DESTTO.value = myData.DESTTO;
                               txt_GRFID.value = myData.GRFID;
                               txt_ROOMNOL.value = myData.ROOMNOL;
                               txt_REGNIDL.value = myData.REGNIDL;
                               txt_REMARKS.value = myData.REMARKS;

                               txtInseruserId.value = myData.INSUSERID;
                               txtInsertime.value = myData.INSTIME;
                               txtinslutude.value = myData.INSLTUDE;
                               txtinseripno.value = myData.INSIPNO;

                           });


                        $('#Hiddentxt_ID').val("");
                        $('#Hiddentxt_REGNYY').val("");
                        $('#txt_CHECKI').val("");
                        $('#txt_GHECKO').val("");

                        $('#txt_RESVYN').val("");
                        $('#txt_RESVDATE').val("");
                        $('#txt_RESVID').val("");
                        $('#txt_CPNM').val("");
                        $('#txt_GCOID').val("");
                        $('#txt_CCYTP').val("");
                        $('#txt_CCYCRT').val("");
                        $('#txt_RTPID').val("");
                        $('#txt_ROOMNO').val("");
                        $('#txt_ROOMRTO').val("");
                        $('#txt_DISCTP').val("");
                        $('#txt_DISCRT').val("");
                        $('#txt_ROOMRTS').val("");
                        $('#txt_VISITPP').val("");
                        $('#txt_VISITPRE').val("");
                        $('#txt_DESTFR').val("");
                        $('#txt_DESTTO').val("");
                        $('#txt_GRFID').val("");
                        $('#txt_ROOMNOL').val("");
                        $('#txt_REGNIDL').val("");
                        $('#txt_REMARKS').val("");

                        $('#txtInseruserId').val("");
                        $('#txtInsertime').val("");
                        $('#txtinslutude').val("");
                        $('#txtinseripno').val("");

                    });


                });
            </script>


}


@*<script src="~/Scripts/jquery.js"></script>*@
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>




