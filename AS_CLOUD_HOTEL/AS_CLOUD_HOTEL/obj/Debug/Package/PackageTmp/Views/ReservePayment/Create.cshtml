@using System.Data
@using System.Data.SqlClient
@using AS_CLOUD_HOTEL.Models
@model AS_CLOUD_HOTEL.Models.HML.HML_RESVPAY

@{
    ViewBag.Title = "Create";

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }

    CLoudHotelDbContext db = new CLoudHotelDbContext();
    Int64 compid = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedCompID"]);
    Int64 loggedUserID = Convert.ToInt64(HttpContext.Current.Session["loggedUserID"].ToString());

    List<SelectListItem> listof_TRMODE = new List<SelectListItem>();
    listof_TRMODE.Add(new SelectListItem { Text = "CASH", Value = "CASH" });
    listof_TRMODE.Add(new SelectListItem { Text = "CHEQUE", Value = "CHEQUE" });
    listof_TRMODE.Add(new SelectListItem { Text = "CREDIT", Value = "CREDIT" });

    List<SelectListItem> listof_CCYTP = new List<SelectListItem>();
    listof_CCYTP.Add(new SelectListItem { Text = "BDT", Value = "BDT" });
    listof_CCYTP.Add(new SelectListItem { Text = "USD", Value = "USD" });


    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);


}
<link href="~/Content/bootstrap_datepicker_css/datepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap_datepicker_css/datepicker3.css" rel="stylesheet" />

<script src="~/Scripts/bootstrap-datepicker.js"></script>

<link href="~/Content/bootstrap_clock_picker/src/clockpicker.css" rel="stylesheet" />
<script src="~/Content/bootstrap_clock_picker/src/clockpicker.js"></script>
<link href="~/Content/bootstrap_clock_picker/src/standalone.css" rel="stylesheet" />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.COMPID, new { @Value = compid, id = "txtCompanyid" })
    @Html.HiddenFor(model => model.INSUSERID, new { @Value = loggedUserID })


    <div id="contentHeaderBox" style="height:auto">
        @if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A")
        {

            var createStatus = "";
            var updateStatus = "";
            var deleteStatus = "";
            var status = "";

            var checkPermisiion = (from m in db.AslRoleDbSet
                                   where m.COMPID == compid && m.USERID == loggedUserID && m.CONTROLLERNAME == "Reserve"
                                   select m).ToList();


            foreach (var x in checkPermisiion)
            {
                status = x.STATUS.ToString();
                createStatus = x.INSERTR.ToString();
                updateStatus = x.UPDATER.ToString();
                deleteStatus = x.DELETER.ToString();
            }


            if (createStatus == "I")
            {
                Response.Redirect("~/GraphView/Index");
            }

            if (createStatus == 'A'.ToString())
            {
                <ul class="nav nav-tabs" role="tablist">
                    <li>@Html.ActionLink("RESERVATION-BASIC", "Create", "Reserve", "", new { style = "color: black;" })</li>
                    <li>@Html.ActionLink("ROOM", "Index", "ReserveRoom", "", new { style = "color: black" })</li>
                    <li class="active">@Html.ActionLink("PAYMENT", "Create", "ReservePayment", "", htmlAttributes: new { style = "color: white;background-color: #286090;" })</li>
                    <li>@Html.ActionLink("COMPLEMENTARY ITEM", "Index", "ReserveComplementaryItem", "", new { style = "color: black" })</li>
                </ul>
            }

            <div class="btn-group pull-right" id="editOption">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                    <i class="fa fa-cog"></i>
                </button>
                <ul class="dropdown-menu pull-right" style="" role="menu">
                    @if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "ReservePayment")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Update", "ReservePayment")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "ReservePayment")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Update", "ReservePayment")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "ReservePayment")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "ReservePayment")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Update", "ReservePayment")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "ReservePayment")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "ReservePayment")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "ReservePayment")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Update", "ReservePayment")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Delete", "ReservePayment")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                </ul>
            </div>

        }

    </div>
    <br />

    <div class="col-md-12">
        <div class="panel panel-success">
            @if (TempData["ReservePaymentCreateMessage"] != null)
            {
                <div class="panel-heading" style=" text-align: center; background-image: linear-gradient(to bottom, #286090 0%, #286090 100%); background-repeat: repeat-x; color: white; background-color: #286090; border-color: #286090;">RESERVATION-PAYMENT (CREATE)- @TempData["ReservePaymentCreateMessage"]</div>
            }
            else
            {
                <div class="panel-heading" style=" text-align: center; background-image: linear-gradient(to bottom, #286090 0%, #286090 100%); background-repeat: repeat-x; color: white; background-color: #286090; border-color: #286090;">RESERVATION-PAYMENT (CREATE)</div>
            }
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("name", "Payment Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.TRANSDT, htmlAttributes: new { id = "txt_TRANSDT", @class = "form-control", @Value = currentDateTime.ToString("dd-MMM-yyyy") })
                </div>

                <div class="col-md-3" style="text-align: right">
                    @Html.Label("name", "Month-Year", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.TRANSMY, htmlAttributes: new { id = "txt_TRANSMY", @class = "form-control", @Value = currentDateTime.ToString("MMM-yy"), @tabindex = "-1", @readonly = "readonly" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("name", "Reservation Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    <input type="text" class="form-control" id="txt_RESVDATE" />
                </div>
                <div class="col-md-3" style="text-align: right">
                    @Html.Label("name", "Reservation ID		", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.RESVID, new SelectList(string.Empty, "Value", "Text"), "- Select -", htmlAttributes: new { id = "txt_RESVID", @class = "form-control" })
                    @*@Html.TextBoxFor(model => model.RESVID, htmlAttributes: new {id = "txt_RESVID", @class = "form-control input-sm", @type = "number", @maxlength = "8"})*@
                    @Html.ValidationMessageFor(model => model.RESVID, "", new { @class = "text-danger" })
                    @if (ViewBag.ReserveID_ValidationMessage != null)
                    {
                        <h6 style="color: #C03523">@ViewBag.ReserveID_ValidationMessage</h6>
                    }
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("name", "Contact Person", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-9">
                    <input type="text" class="form-control input-sm" id="txt_CPNM" readonly="readonly" />
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("name", "Payment Mode", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.TRMODE, listof_TRMODE, htmlAttributes: new { id = "txt_RESVTP", @class = "form-control input-sm", @maxlength = "10" })
                </div>

                <div class="col-md-3" style="text-align: right">
                    @Html.Label("name", "Currency Type", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.CCYTP, listof_CCYTP, htmlAttributes: new { @class = "form-control input-sm", @maxlength = "8" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("name", "Amount", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.AMOUNT, htmlAttributes: new { id = "txtAMOUNT", @class = "form-control input-sm", @maxlength = "17", @type = "number", @Step = "any", @Value = "0" })
                    @Html.ValidationMessageFor(model => model.AMOUNT, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3" style="text-align: right">
                    @Html.Label("name", "Remarks", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextAreaFor(model => model.REMARKS, htmlAttributes: new { @class = "form-control input-sm", @maxlength = "100" })
                    @Html.ValidationMessageFor(model => model.REMARKS, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.TextBoxFor(model => model.INSLTUDE, new { id = "latlon", style = "display: none;" })
            <input id="lat" type="hidden" />
            <input id="lon" type="hidden" />

            <br />
            <div class="row">
                <div class="col-md-3">
                    <input type="submit" class="btn btn-primary btn-block" value="Save" name="command"/>
                </div>
                <div class="col-md-3">
                    <input type="submit" id="Memo_ButtonId" class="btn btn-default btn-block" name="command" value="Memo" data-toggle="tooltip" data-placement="bottom" title="Paper size A4" formtarget="_blank" tabindex="15"/>
                </div>
                <div class="col-md-6"></div>
            </div>
        </div>
    </div>


    <script src="http://maps.google.com/maps/api/js?sensor=false"></script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlon").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }

            //function positionError(position) {
            //    alert("!!! Error: "+position.code);
            //}
        });
    </script>


                    //datatime picker script
                    <script type="text/javascript">
                        $('.clockpicker').clockpicker();
                    </script>


                    <script type="text/javascript">
                        $(document).ready(function () {


                            $('#Memo_ButtonId').click(function () {
                                setTimeout(function () { window.location.reload(); }, 100);
                            });

                            $('#txt_TRANSDT').datepicker({
                                format: "dd-M-yyyy",
                                autoclose: true,
                                todayHighlight: true,
                                showOnFocus: true,
                            }).on('show', function (e) {
                                if (e.date) {
                                    $(this).data('stickyDate', e.date);
                                } else {
                                    $(this).data('stickyDate', null);
                                }
                            }).on('hide', function (e) {
                                var stickyDate = $(this).data('stickyDate');

                                if (!e.date && stickyDate) {
                                    $(this).datepicker('setDate', stickyDate);
                                    $(this).data('stickyDate', null);
                                }
                                
                            });

                            $('#txt_TRANSDT').change(function () {
                                var txtTRANSMY = document.getElementById('txt_TRANSMY');
                                var theDate = $('#txt_TRANSDT').val();
                                $.getJSON(
                                    "/ReservePayment/GetMonthYear", { "TheDate": theDate },
                                    function (myData) {
                                        txtTRANSMY.value = myData.MonthYear;

                                    });
                                document.getElementById("txt_RESVDATE").focus();
                            });



                            $('#txt_RESVDATE').datepicker({
                                format: "dd-M-yyyy",
                                autoclose: true,
                                todayHighlight: true,
                                showOnFocus: true,
                            }).on('show', function (e) {
                                if (e.date) {
                                    $(this).data('stickyDate', e.date);
                                } else {
                                    $(this).data('stickyDate', null);
                                }
                            }).on('hide', function (e) {
                                var stickyDate = $(this).data('stickyDate');

                                if (!e.date && stickyDate) {
                                    $(this).datepicker('setDate', stickyDate);
                                    $(this).data('stickyDate', null);
                                }

                            });
                          
                            $('#txt_RESVDATE').change(function () {
                                var datetxt = $('#txt_RESVDATE').val();
                                var companyid = $('#txtCompanyid').val();
                                $("#txt_RESVID").val(" ");
                                $.ajax
                                ({
                                    url: '@Url.Action("ReserveIDload", "Reserve")',
                                    type: 'post',
                                    dataType: "json",
                                    data: { theDate: datetxt, compid: companyid },
                                    success: function (data) {
                                        $("#txt_RESVID").empty();
                                        $("#txt_RESVID").append('<option value="'
                                            + "Select" + '">'
                                            + "Select" + '</option>');


                                        $.each(data, function (i, memo) {

                                            $("#txt_RESVID").append('<option value="'
                                                + memo.Value + '">'
                                                + memo.Text + '</option>');

                                        });
                                    }
                                });
                            });



                            $('#txt_RESVID').change(function () {
                                var changedText = $("#txt_RESVID").val();
                                var reservDate = $("#txt_RESVDATE").val();
                                var compid = $('#txtCompanyid').val();

                                var txtBox = document.getElementById('txt_RESVID');
                                var txt_RESVDATE = document.getElementById('txt_RESVDATE');
                                var txt_CPNM = document.getElementById('txt_CPNM');

                                $.getJSON(
                                    '/ReservePayment/keyword_reserveID', { "ChangedText": changedText, "Compid": compid, "ReservDate": reservDate },
                                    function (result) {
                                        txtBox.value = result.ID;
                                        txt_RESVDATE.value = result.DATE;
                                        txt_CPNM.value = result.CONTACTP;
                                    });

                            });

                            //$('#txt_RESVID').autocomplete({

                            //    source: function (request, response) {
                            //        var compID = $('#txtCompanyid').val();
                            //        var reservDate = $('#txt_RESVDATE').val();
                            //        $.ajax({
                            //            url: '/ReservePayment/TagSearch_reserveID',
                            //            type: 'GET',
                            //            cache: false,
                            //            data: { character: request.term,  compid: compID, reservdate: reservDate },
                            //            dataType: 'json',
                            //            success: function (data) {
                            //                response($.map(data, function (item) {
                            //                    return {
                            //                        label: item,
                            //                        value: item,
                            //                    };
                            //                }));
                            //            }
                            //        });
                            //    },
                            //    change: $('#txt_RESVID').keyup(_.debounce(txtOneChanged, 500)),
                            //    select: function (event, ui) {
                            //        $("#txt_RESVID").val(ui.item.label);
                            //        txtOneChanged();
                            //    },
                            //});


                            //function txtOneChanged() {
                            //    var changedText = $("#txt_RESVID").val();
                            //    var reservDate = $("#txt_RESVDATE").val();
                            //    var compid = $('#txtCompanyid').val();

                            //    var txtBox = document.getElementById('txt_RESVID');
                            //    var txt_RESVDATE = document.getElementById('txt_RESVDATE');
                            //    var txt_CPNM = document.getElementById('txt_CPNM');

                            //    $.getJSON(
                            //        '/ReservePayment/keyword_reserveID', { "ChangedText": changedText, "Compid": compid, "ReservDate": reservDate },
                            //        function (result) {
                            //            txtBox.value = result.ID;
                            //            txt_RESVDATE.value = result.DATE;
                            //            txt_CPNM.value = result.CONTACTP;
                            //        });

                            //}




                        });
                    </script>

                   
}

<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
